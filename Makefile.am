ACLOCAL_AMFLAGS = -I m4
AM_CPPFLAGS = -I$(top_builddir)/lib -I$(top_srcdir)/lib
AM_CFLAGS = $(WARN_CFLAGS) $(PTHREAD_CFLAGS)
AM_LDFLAGS = $(LIBGNU_LIBDEPS) $(LIB_CLOCK_GETTIME)
SUBDIRS = lib

# slow.mk is auto-generated by the maintainer (see GNUmakefile)
include $(top_srcdir)/test/slow.mk

mog_src =
mog_src += accept.c
mog_src += accept_loop.c
mog_src += activeq.h
mog_src += addrinfo.c
mog_src += alloc.c
mog_src += bind_listen.c
mog_src += bsd/queue_safe.h
mog_src += bsd/simpleq.h
mog_src += canonpath.c
mog_src += cfg.c
mog_src += cfg.h
mog_src += cfg_validate.c
mog_src += cloexec_detect.c
mog_src += cloexec_from.c
mog_src += close.c
mog_src += cmogstored.h
mog_src += compat_accept.h
mog_src += compat_epoll_pwait.h
mog_src += compat_memstream.h
mog_src += compat_sendfile.h
mog_src += defaults.h
mog_src += dev.c
mog_src += digest.c
mog_src += digest.h
mog_src += exit.c
mog_src += fadvise.h
mog_src += fdmap.c
mog_src += fdmap.h
mog_src += file.c
mog_src += fs.c
mog_src += fs.h
mog_src += fsck_queue.c
mog_src += gcc.h
mog_src += http.c
mog_src += http.h
mog_src += http_date.c
mog_src += http_dav.c
mog_src += http_get.c
mog_src += http_put.c
mog_src += http_util.h
mog_src += inherit.c
mog_src += ioprio.h
mog_src += ioprio_linux.h
mog_src += iostat.c
mog_src += iostat.h
mog_src += iostat_process.c
mog_src += ioutil.c
mog_src += iov_str.h
mog_src += listen_parser.h
mog_src += listen_parser_internal.c
mog_src += maxconns.c
mog_src += mgmt.c
mog_src += mgmt.h
mog_src += mgmt_fn.c
mog_src += mkpath_for.c
mog_src += mnt.c
mog_src += mnt.h
mog_src += mnt_usable.c
mog_src += nostd/setproctitle.h
mog_src += notify.c
mog_src += notify.h
mog_src += pidfile.c
mog_src += process.c
mog_src += queue_common.c
mog_src += queue_epoll.c
mog_src += queue_epoll.h
mog_src += queue_kqueue.c
mog_src += queue_kqueue.h
mog_src += queue_loop.c
mog_src += queue_step.c
mog_src += selfwake.h
mog_src += selfwake.c
mog_src += sig.c
mog_src += svc.c
mog_src += svc_dev.c
mog_src += thrpool.c
mog_src += trywrite.c
mog_src += util.h
mog_src += upgrade.c

LDADD = $(LIBINTL) $(top_builddir)/lib/libgnu.a libnostd.a
noinst_LIBRARIES = libnostd.a
NOSTD_CFLAGS = -include $(top_builddir)/$(CONFIG_HEADER)
libnostd_a_SOURCES = nostd/setproctitle.c nostd/setproctitle_noop.c
libnostd_a_CFLAGS = $(AM_CFLAGS) $(NOSTD_CFLAGS)

RLFLAGS = -G2 -e
RAGEL = ragel
RL_MAIN = cfg_parser.rl iostat_parser.rl listen_parser.rl mgmt_parser.rl \
          valid_path.rl http_parser.rl chunk_parser.rl valid_put_path.rl
RL_CGEN = $(RL_MAIN:.rl=.c)
RL_ALL = listen_parser_common.rl http_common.rl $(RL_MAIN)

cfg_parser.c: cfg_parser.rl listen_parser_common.rl
listen_parser.c: listen_parser.rl listen_parser_common.rl
http_parser.c: http_parser.rl http_common.rl
chunk_parser.c: chunk_parser.rl http_common.rl
.rl.c:
	$(AM_V_GEN)$(RAGEL) $< -C $(RLFLAGS) -o $@

BUILT_SOURCES = $(top_srcdir)/.version
bin_PROGRAMS = cmogstored
cmogstored_SOURCES = $(mog_src) $(RL_CGEN) cmogstored.c

RUBY = ruby
PERL = perl
PROVE = prove
TEST_EXTENSIONS = .rb .slowrb .perl
RB_LOG_COMPILER = $(RUBY)
AM_RB_LOG_FLAGS = -I$(top_srcdir)
RB_LOG_FLAGS = -w
PERL_TESTS = test/mogilefs_integration.perl
PERL_LOG_COMPILER = $(PROVE)
PERL_LOG_FLAGS = -v
SLOWRB_LOG_COMPILER = RUBY="$(RUBY)"
AM_SLOWRB_LOG_FLAGS = top_srcdir="$(top_srcdir)"
include $(top_srcdir)/test/ruby.mk
check_PROGRAMS = test/valid-path-1 test/trywrite-1 \
  test/cfg-parser-1 test/fdmap-1 test/thrpool-1 \
  test/queue-idle-1 \
  test/http-parser-1 test/chunk-parser-1 \
  test/ioutil-1

TESTS = $(SLOW_RB_FILES) $(RB_TESTS_FAST) $(check_PROGRAMS) $(PERL_TESTS)

# we need TMPDIR to work in a place where iostat(1) gives stats
test_tmpdir = $(top_builddir)/tmp

$(RB_TESTS:.rb=.log):: $(bin_PROGRAMS) $(test_tmpdir)/.stamp
$(PERL_TESTS:.perl=.log):: $(bin_PROGRAMS) $(test_tmpdir)/.stamp

$(test_tmpdir)/.stamp:
	@mkdir -p $(test_tmpdir) && > $@

test_COMMON = $(mog_src) $(RL_CGEN) check.h

test_valid_path_1_SOURCES = test/valid-path-1.c $(test_COMMON)
test_trywrite_1_SOURCES = test/trywrite-1.c $(test_COMMON)
test_cfg_parser_1_SOURCES = test/cfg-parser-1.c $(test_COMMON)
test_fdmap_1_SOURCES = test/fdmap-1.c $(test_COMMON)
test_thrpool_1_SOURCES = test/thrpool-1.c $(test_COMMON)
test_queue_idle_1_SOURCES = test/queue-idle-1.c $(test_COMMON)
test_http_parser_1_SOURCES = test/http-parser-1.c $(test_COMMON)
test_chunk_parser_1_SOURCES = test/chunk-parser-1.c $(test_COMMON)
test_ioutil_1_SOURCES = test/ioutil-1.c $(test_COMMON)

HELP2MAN = help2man
dist_man_MANS = cmogstored.1

cmogstored.1: cmogstored.x cmogstored.c
.x.1:
	$(AM_V_GEN)if test -f $(top_builddir)/cmogstored; then \
	$(HELP2MAN) -i $< -N $(top_builddir)/cmogstored > $@.$$$$ && \
	mv $@.$$$$ $@; fi

extra_doc = HACKING NEWS ChangeLog TODO
RAKE = rake
$(top_srcdir)/NEWS: configure.ac
	$(AM_V_GEN)$(RAKE) -sq news > $@.$$$$ && mv $@.$$$$ $@
$(top_srcdir)/ChangeLog: configure.ac
	$(AM_V_GEN)$(RAKE) -sq changelog > $@.$$$$ && mv $@.$$$$ $@

RSYNC = rsync
RSYNC_DEST = bogomips.org:/srv/bogomips/cmogstored/
WWW_DOC = README AUTHORS NEWS.atom.xml INSTALL $(extra_doc)
NEWS.atom.xml: configure.ac
	$(AM_V_GEN)$(RAKE) -sq news_atom > $@.$$$$ && mv $@.$$$$ $@
publish: NEWS.atom.xml NEWS ChangeLog
	mkdir -p www/
	-git set-file-times
	$(INSTALL_DATA) -p $(WWW_DOC) www/
	for i in $$(git ls-files doc/); do $(INSTALL_DATA) -p $$i www/; done
	$(RSYNC) -av www/ $(RSYNC_DEST)

.PHONY: publish

EXTRA_DIST = $(RB_TESTS) $(RL_CGEN) $(RL_ALL) $(PERL_TESTS) $(extra_doc) \
  .gitignore Rakefile autogen.sh GNUmakefile bsd/README doc m4 \
  test/test_helper.rb test/iostat-mock.rb \
  test/.gitignore test/gen-slow.sh test/slow.mk \
  cmogstored.x .ctags $(SLOW_RB_FILES) \
  build-aux/.gitignore build-aux/snippet/.gitignore \
  tests/.gitignore \
  $(top_srcdir)/.version \
  test/valgrind.supp nostd/README

TESTS_ENVIRONMENT = PATH=$(top_builddir):$$PATH TMPDIR=$(test_tmpdir)

VALGRIND = valgrind -v --show-reachable=yes --leak-check=yes \
           --track-origins=yes --error-exitcode=126 \
           --suppressions=$(top_srcdir)/test/valgrind.supp
VALGRIND_CHECK = check
check-valgrind:
	VALGRIND="$(VALGRIND)" $(MAKE) $(VALGRIND_CHECK)

CLEANFILES = -r $(test_tmpdir) $(top_srcdir)/tmp
MAINTAINERCLEANFILES = $(dist_man_MANS)
include $(top_srcdir)/build-aux/coverage.mk
include $(top_srcdir)/build-aux/release.mk
include $(top_srcdir)/build-aux/sparse.mk
include $(top_srcdir)/build-aux/pgo.mk

$(top_srcdir)/.version:
	echo $(VERSION) > $@-t && mv $@-t $@
dist-hook:
	echo $(VERSION) > $(distdir)/.tarball-version
